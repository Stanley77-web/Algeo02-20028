{"ast":null,"code":"var _jsxFileName = \"C:\\\\Lenovo Temp\\\\IF Files\\\\Sem3\\\\Algeo\\\\Tubes2Fix\\\\Algeo02-20028\\\\test\\\\react-flask-app\\\\src\\\\components\\\\FileUpload.jsx\";\nimport React from 'react';\nimport './App.css';\nimport blur from \"./static/blurred.png\";\nimport fin from \"./static/fin.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckbox = Evn => {\n      Evn.preventDefault();\n      console.log(Evn.target.value);\n    };\n\n    this.state = {\n      file: blur,\n      compressed: blur,\n      value: 50,\n      timeTaken: 0,\n      downloadlink: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n  handleValueChange(event) {\n    event.preventDefault();\n    const inputValue = event.target.value;\n    this.setState({\n      value: inputValue\n    });\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    this.setState({\n      file: URL.createObjectURL(event.target.files[0]) // compressed: blur\n\n    });\n  }\n\n  handleUploadImage(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    ev.nativeEvent.stopImmediatePropagation();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    data.append('filename', this.uploadInput.files[0].name);\n    data.append('ratio', this.state.value);\n\n    if (this.uploadInput.files[0] !== undefined) {\n      var startDate = Date.now();\n      const config = {\n        method: 'POST',\n        body: data\n      };\n      fetch('http://localhost:5000/upload', config).then(() => {\n        const postcompressionsrc = 'converted_'.concat(this.uploadInput.files[0].name);\n        var endDate = (Date.now() - startDate) / 1000;\n        this.setState({\n          compressed: \"http://127.0.0.1:5000/view/\".concat(postcompressionsrc),\n          downloadlink: \"http://128.0.0.1:5000/download/\".concat(postcompressionsrc),\n          timeTaken: endDate\n        });\n      });\n    }\n\n    return false;\n  }\n\n  render() {\n    // let imageForm;\n    // imageForm = (\n    // )\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          event.preventDefault();\n          this.handleUploadImage(event);\n        },\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: ref => {\n              this.uploadInput = ref;\n            },\n            type: \"file\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"compressionText\",\n          children: /*#__PURE__*/_jsxDEV(\"text\", {\n            children: \"Compression Ratio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inputLine\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"slider\",\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            value: \"50\",\n            value: this.state.value,\n            onChange: event => {\n              this.handleValueChange(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"value\",\n            type: \"number\",\n            id: \"ratio\",\n            name: \"ratio\",\n            min: \"1\",\n            max: \"100\",\n            value: this.state.value,\n            onChange: event => {\n              this.handleValueChange(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inputCheck\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: this.handleCheckbox,\n            value: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            children: \"Check to transparent the background\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"imageBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Before \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.file,\n            alt: \"beforeIMG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"imageBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" After \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.compressed,\n            alt: \"afterIMG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Lenovo Temp/IF Files/Sem3/Algeo/Tubes2Fix/Algeo02-20028/test/react-flask-app/src/components/FileUpload.jsx"],"names":["React","blur","fin","FileUpload","Component","constructor","props","handleCheckbox","Evn","preventDefault","console","log","target","value","state","file","compressed","timeTaken","downloadlink","handleChange","bind","handleUploadImage","handleValueChange","event","inputValue","setState","URL","createObjectURL","files","ev","stopPropagation","nativeEvent","stopImmediatePropagation","data","FormData","append","uploadInput","name","undefined","startDate","Date","now","config","method","body","fetch","then","postcompressionsrc","concat","endDate","render","ref"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport blur from \"./static/blurred.png\";\r\nimport fin from \"./static/fin.jpeg\";\r\n\r\nclass FileUpload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      file: blur,\r\n      compressed: blur,\r\n      value: 50,\r\n      timeTaken: 0,\r\n      downloadlink : '',\r\n    }    \r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleUploadImage = this.handleUploadImage.bind(this);\r\n  }\r\n\r\n  handleValueChange(event){\r\n    event.preventDefault();\r\n    const inputValue = event.target.value;\r\n    this.setState({\r\n      value: inputValue\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  handleChange(event) {\r\n    event.preventDefault();\r\n    this.setState({\r\n      file: URL.createObjectURL(event.target.files[0])\r\n      // compressed: blur\r\n    })\r\n  }\r\n  handleCheckbox = Evn => {\r\n    Evn.preventDefault();\r\n    console.log(Evn.target.value)\r\n  }\r\n  \r\n handleUploadImage(ev) {\r\n  ev.preventDefault();\r\n  ev.stopPropagation();\r\n  ev.nativeEvent.stopImmediatePropagation();\r\n\r\n   const data = new FormData();\r\n   data.append('file', this.uploadInput.files[0]);\r\n   data.append('filename', this.uploadInput.files[0].name); \r\n    data.append('ratio', this.state.value);\r\n\r\n    \r\n    if (this.uploadInput.files[0] !== undefined) {\r\n      var startDate = Date.now();\r\n      const config = {\r\n        method: 'POST',\r\n        body: data,\r\n      }\r\n      fetch('http://localhost:5000/upload', config)\r\n      .then(() => {\r\n        const postcompressionsrc = 'converted_'.concat(this.uploadInput.files[0].name);\r\n        var endDate = (Date.now() - startDate)/1000; \r\n        this.setState({\r\n          compressed: \"http://127.0.0.1:5000/view/\".concat(postcompressionsrc),\r\n          downloadlink: \"http://128.0.0.1:5000/download/\".concat(postcompressionsrc),\r\n          timeTaken : endDate\r\n        });\r\n      })\r\n    }\r\n    return false;\r\n  }\r\n\r\n  \r\n  \r\n  render() {\r\n    // let imageForm;\r\n    // imageForm = (\r\n    // )\r\n\r\n    return (\r\n      <div>\r\n          <form onSubmit={(event) => {event.preventDefault(); this.handleUploadImage(event)}} class=\"container\">\r\n            <div>\r\n              <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" onChange={this.handleChange}/>\r\n              <button>Upload</button>\r\n            </div>\r\n            <div class=\"compressionText\">\r\n            <text>Compression Ratio</text>\r\n            </div>\r\n            <div class=\"inputLine\">\r\n              <input class=\"slider\" type=\"range\" min=\"0\" max=\"100\" value=\"50\" value={this.state.value} onChange={(event) => {this.handleValueChange(event)}}></input>\r\n              <input class=\"value\" type=\"number\" id=\"ratio\" name=\"ratio\" min=\"1\" max=\"100\" value={this.state.value} onChange={(event) => {this.handleValueChange(event)}}></input>\r\n              {/* <text>{this.state.value}</text> */}\r\n            </div>\r\n            <div class=\"inputCheck\">\r\n              <input type=\"checkbox\" onChange={this.handleCheckbox} value=\"true\"></input>\r\n              <text>Check to transparent the background</text>\r\n            </div>\r\n          </form>\r\n        {/* {imageForm} */}\r\n        <div class=\"container\">\r\n          <div class=\"imageBox\">\r\n            <h3> Before </h3>\r\n            <img src={this.state.file} alt=\"beforeIMG\"></img>\r\n          </div>\r\n          <div class=\"imageBox\">\r\n            <h3> After </h3>\r\n            <img src={this.state.compressed} alt=\"afterIMG\"></img>\r\n          </div>\r\n        </div>\r\n        <form>\r\n          <button>Download</button>\r\n        </form>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}